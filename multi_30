# guided resnet8 cifar-10
cdelp; python examples/attribution_benchmark.py --arch vgg16 --dataset cifar-10 --save_detailed_results true --metrics deletion_game $continue_ --use_landataloader true
 - block diagram
 - plotdeletion
 - summarize all deletion for multithresh saliency:
    methods=multithresh_saliency summarize_all_deletion_small
 - DATASET=mnist summarize_all_deletion
 - DATASET=cifar-10 IGNORE_METHOD=multithresh_saliency summarize_all_deletion
 - which image to run self saliency on 
 - self saliency panel: add imroot to savename
 - jet map without matplotlib axis for saving in saver
 - lr might be too high for self saliency on lower layers
 - vimtmpalias visualize get images using pointing game ( cherry pick )
 - vimtmpalias visualize qualitative for vgg16 and resnet50
 - visualize script in multithresh_saliency schedule of a randomly initialized mask vs a fully optimized one.
 - measure the mask area across images? -- why, this is not equivalent to elp area .. to show that elp's fixed area is not the way to go
 - collect results of all deletion scores ( summarize deletion? \& collect deletion)
---------------------------------------------------------------------
run in tmux
run multi imagenet  resnet50
IGNORE_METHOD=multithresh_saliency runallsmaller vgg16 mnist
run smaller:
    vgg16:
        cifar-10:
            multi
        cifar-100:
            guided
            grad_cam
            multi
        mnist:
            multi
     resnet8:
        cifar-10:
        cifar-100:
            multi
        mnist:
            multi
............................................         
        mnist:
            gradient
            guided
            grad_cam
            integrated
        cifar-10:
             gradient
            guided
            grad_cam
            integrated
         cifar-100:
             gradient
            integrated
      

######################################################################
######################################################################
DOING
---------------------------------------------------------------------
finish runs for all cifar stuff
t-smaller
runallsmaller
######################################################################
######################################################################
DONE:
 - the max point seems to be on the top left corner
 - gradcam doesnt seem to have saliency
 tmux sessions:
    - smaller: mnist resnet8
    - ?: c100 resnet8
    x smaller2: cifar-100 vgg16
    - smaller-vgg16 mnist vgg16
    - smaller-vgg16-c10 c10 vgg16
    - smaller-vgg16-c100 c100 vgg16

 - run in another vast instance:
    fix the issues with the vast-utils install
    setup an alias
    add money
    setup_instance
    run the program
 - see the ratios in collect

 cdrunjson &&  cp run_imagenet_vgg16.json run_smaller_vgg16.json && vim run_smaller_vgg16.json && genrunscript run_smaller_vgg16.json
 - check_git
 - check_rclone
 - save the ratios in summarize_deletion
Imagenet on competing is done i think
we should be running pointing on all the imagenet runs
---------------------------------------------------------------------
runallsmallervgg16:
    type expand alias to another variable and run
        in tmux
runallsmallerresnet8:
    in tmux
---------------------------------------------------------------------
visualize for multi paper?
    visualize the trajectory of the images ... 
    look at vimmulti (type vimmulti)
    look at how elp_massking is used and how the areas have been used 
    vim -O $multi -O $comparemasking
check n_done for imagenet vgg16,resnet50 
- which methods ( copy from vimrunjson run_imagenet_vgg16.json)
- loop overmethods and print
- print out the methodnames



NOT DOING
 - final saliency as weighted sum of saliencies? (weighted by score?) --> why? this is similar to scorecam
 co-saliency
 - ablation?
 - self-saliency for vgg16 and resnet50
######################################################################
######################################################################
RECHECK:
save  igos final saliency and then use this as in initializer for mulitthresh_saliency. "who runs it?" the visualizer should run it
---------------------------------------------------------------------
create graphs for (12 graphs):
     deletion & insertion (ig,gradcam,multi, scorecam):
            resnet8,vgg16:
                cifar,mnist,cifar-10

---------------------------------------------------------------------
runallimagenetformultipaper:
    runtorchray run_vast_imagenet_vgg16.sh
    runtorchray run_vast_imagenet_resnet50.sh
---------------------------------------------------------------------

