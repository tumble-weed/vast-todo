- erc upwork
workoncomparemasking
- instead of imagenet-5000 mention imagenet
- the figures for the paper
vim /root/bigfiles/other/metrics-torchray/where_elp_gp_beter_anchor_extremal_perturbation_with_simple_scale_and_crop_with_gp_gp_y_modelog_prob_gp_ncrops1100_gp_sample1_freq1_arch_vgg16_imroots_and_class_ids
# guided resnet8 cifar-10
# cifar-10-guided_backprop-resnet8
  0%|                                                                                                                 | 0/10000 [00:00<?, ?it/s]
Traceback (most recent call last):                                                                                                                                                       
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connection.py", line 174, in _new_conn                                      
    conn = connection.create_connection(                                                                                                        
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/util/connection.py", line 95, in create_connection                          
    raise err                                                                                                                                   
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/util/connection.py", line 85, in create_connection                          
    sock.connect(sa)                                                                                                                            
ConnectionRefusedError: [Errno 111] Connection refused                                                                                          
                                                                                                                                                
During handling of the above exception, another exception occurred:                                                                             
                                                                                                                                                
Traceback (most recent call last):                                                                                                              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 715, in urlopen                                    
    httplib_response = self._make_request(                                                                                                      
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 416, in _make_request                              
    conn.request(method, url, **httplib_request_kw)                                                                                             
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connection.py", line 244, in request                                                                                 
    super(HTTPConnection, self).request(method, url, body=body, headers=headers)                                                                
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 1256, in request                                                            
    self._send_request(method, url, body, headers, encode_chunked)                                                                              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 1302, in _send_request                                                      
    self.endheaders(body, encode_chunked=encode_chunked)                                                                                        
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 1251, in endheaders                                                         
    self._send_output(message_body, encode_chunked=encode_chunked)                                                                              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 1011, in _send_output                                                       
    self.send(msg)                                                                                                                              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 951, in send                                                                
    self.connect()                                                                                                                                                                                                      
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connection.py", line 205, in connect                                            conn = self._new_conn()                                                                                                                     
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connection.py", line 186, in _new_conn                                      
    raise NewConnectionError(                                                                                                                   
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f8d7714fa30>: Failed to establish a new connection: [Errno 111] Connection refused                                                                                          
                                                                                            
During handling of the above exception, another exception occurred:                                                              
                                                                                            
Traceback (most recent call last):                                                          
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/requests/adapters.py", line 486, in send                                                                                                                                                               
    resp = conn.urlopen(                                                                    
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 799, in urlopen                                                                             
    retries = retries.increment(              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/util/retry.py", line 592, in increment                                                                                                                                                         
    raise MaxRetryError(_pool, url, error or ResponseError(cause))                                                               
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=14000): Max retries exceeded with url: /next (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8d7714fa30>: Failed to establish a new connection: [Errno 
111] Connection refused'))                            
                                                                                                                                                                                                                        
During handling of the above exception, another exception occurred:                                   

Traceback (most recent call last):                                                                                                              
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 715, in urlopen                                    
    httplib_response = self._make_request(                                                                                                      
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 467, in _make_request                              
    six.raise_from(e, None)                                             
  File "<string>", line 3, in raise_from                                                                                                        
  File "/opt/conda/envs/gpnnenv/lib/python3.8/site-packages/urllib3/connectionpool.py", line 462, in _make_request                              
    httplib_response = conn.getresponse()                                                                                                       
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 1348, in getresponse                                                        
    response.begin()                                                                                                                            
  File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 316, in begin                                            
    version, status, reason = self._read_status()                                                                                                 File "/opt/conda/envs/gpnnenv/lib/python3.8/http/client.py", line 277, in _read_status                                                        
    line = str(self.fp.readline(_MAXLINE + 1), "iso-8859-1")
  File "/opt/conda/envs/gpnnenv/lib/python3.8/socket.py", line 669, in readinto                                                                 
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 104] Connection reset by peer              

- run just insertion
cdelp; python examples/attribution_benchmark.py --arch vgg16 --dataset cifar-10 --save_detailed_results true --metrics deletion_game $continue_ --use_landataloader true
 - just insertion game?
 - plotdeletion
 - summarize all deletion for multithresh saliency:
    methods=multithresh_saliency summarize_all_deletion_small
 - DATASET=mnist summarize_all_deletion
 - DATASET=cifar-10 IGNORE_METHOD=multithresh_saliency summarize_all_deletion
 - which image to run self saliency on 
 - self saliency panel: add imroot to savename
 - jet map without matplotlib axis for saving in saver
 - lr might be too high for self saliency on lower layers
 - vimtmpalias visualize get images using pointing game ( cherry pick )
 - vimtmpalias visualize qualitative for vgg16 and resnet50
 - visualize script in multithresh_saliency schedule of a randomly initialized mask vs a fully optimized one.
 - measure the mask area across images? -- why, this is not equivalent to elp area .. to show that elp's fixed area is not the way to go
 - collect results of all deletion scores ( summarize deletion? \& collect deletion)
---------------------------------------------------------------------
run in tmux
run multi imagenet  resnet50
IGNORE_METHOD=multithresh_saliency runallsmaller vgg16 mnist
run smaller:
    vgg16:
        cifar-10:
            multi
        cifar-100:
            guided
            grad_cam
            multi
        mnist:
            multi
     resnet8:
        cifar-10:
        cifar-100:
            multi
        mnist:
            multi
............................................         
        mnist:
            gradient
            guided
            grad_cam
            integrated
        cifar-10:
             gradient
            guided
            grad_cam
            integrated
         cifar-100:
             gradient
            integrated
      

######################################################################
######################################################################
DOING
---------------------------------------------------------------------
finish runs for all cifar stuff
t-smaller
runallsmaller
######################################################################
######################################################################
DONE:
 - the max point seems to be on the top left corner
 - gradcam doesnt seem to have saliency
 tmux sessions:
    - smaller: mnist resnet8
    - ?: c100 resnet8
    x smaller2: cifar-100 vgg16
    - smaller-vgg16 mnist vgg16
    - smaller-vgg16-c10 c10 vgg16
    - smaller-vgg16-c100 c100 vgg16

 - run in another vast instance:
    fix the issues with the vast-utils install
    setup an alias
    add money
    setup_instance
    run the program
 - see the ratios in collect

 cdrunjson &&  cp run_imagenet_vgg16.json run_smaller_vgg16.json && vim run_smaller_vgg16.json && genrunscript run_smaller_vgg16.json
 - check_git
 - check_rclone
 - save the ratios in summarize_deletion
Imagenet on competing is done i think
we should be running pointing on all the imagenet runs
---------------------------------------------------------------------
runallsmallervgg16:
    type expand alias to another variable and run
        in tmux
runallsmallerresnet8:
    in tmux
---------------------------------------------------------------------
visualize for multi paper?
    visualize the trajectory of the images ... 
    look at vimmulti (type vimmulti)
    look at how elp_massking is used and how the areas have been used 
    vim -O $multi -O $comparemasking
check n_done for imagenet vgg16,resnet50 
- which methods ( copy from vimrunjson run_imagenet_vgg16.json)
- loop overmethods and print
- print out the methodnames



NOT DOING
 - block diagram
 - final saliency as weighted sum of saliencies? (weighted by score?) --> why? this is similar to scorecam
 co-saliency
 - ablation?
 - self-saliency for vgg16 and resnet50
######################################################################
######################################################################
RECHECK:
save  igos final saliency and then use this as in initializer for mulitthresh_saliency. "who runs it?" the visualizer should run it
---------------------------------------------------------------------
create graphs for (12 graphs):
     deletion & insertion (ig,gradcam,multi, scorecam):
            resnet8,vgg16:
                cifar,mnist,cifar-10

---------------------------------------------------------------------
runallimagenetformultipaper:
    runtorchray run_vast_imagenet_vgg16.sh
    runtorchray run_vast_imagenet_resnet50.sh
---------------------------------------------------------------------
LATER

- staggered and "both" mode
- continue and use_landataloader
